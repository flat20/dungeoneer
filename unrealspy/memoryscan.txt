
    MODULEINFO mi;
    bool success = GetModuleInformation(hProc, dll, &mi, sizeof(mi));
    if (success != true) {
        printf("Unable to get mem information\n");
    } else {
        printf("EntryPoint: %llx BaseOfDll %llx SizeOfImage %lx\n", (DWORD64)mi.EntryPoint, (DWORD64)mi.lpBaseOfDll, mi.SizeOfImage);
    }
    LPCVOID begin = (LPCVOID)dll;
    
    MEMORY_BASIC_INFORMATION mbi;
    mbi.RegionSize = 0x1000;
    VirtualQueryEx(hProc, begin, &mbi, sizeof(mbi));
    //if (mbi.State != MEM_COMMIT || mbi.Protect == PAGE_NOACCESS) continue;
    printf("Mem State Commit %s\n", mbi.State == MEM_COMMIT ? "true" : "false");
    printf("Mem Protect PAGE_NOACCESS %s\n", mbi.Protect == PAGE_NOACCESS ? "true" : "false");